var searchIndex = new Map(JSON.parse('[\
["verso",{"doc":"Verso Web Browser","t":"EEECCCCCCCCEPPFFPPGPPPGPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNONNNNNNNNNNNNNNOOONNONNOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOFNNNNNNNNNNNNNNNNNNNNNNOONNNNNNPGPPPINNNNNNNNNNNNNNNNNNNNNNNNNNNNNSSHPPPPPPPPPGFFGPPPONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNONNNNNNOFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Error","Result","Verso","compositor","config","errors","keyboard","touch","verso","webview","window","winit","Click","FinishedShuttingDown","IOCompositor","InitialCompositorState","MouseDown","MouseUp","MouseWindowEvent","NotShuttingDown","Profiler","RenderTargetDebug","ShutdownState","ShuttingDown","TextureCacheDebug","WebRenderDebugOption","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","composite","constellation_chan","constellation_chan","current_window","deinit","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","eq","filterable","filterable","filterable","filterable","filterable","fmt","from","from","from","from","from","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","invalidate_native_surface","is_animating","maybe_boxed","maybe_boxed","maybe_boxed","maybe_boxed","maybe_boxed","maybe_boxed","maybe_boxed","maybe_boxed","maybe_boxed","maybe_boxed","maybe_start_shutting_down","mem_profiler_chan","new","on_mouse_window_event_class","on_mouse_window_move_event_class","on_pinch_zoom_window_event","on_resize_webview_event","on_resize_window_event","on_scale_factor_event","on_scroll_event","on_touch_event","on_wheel_event","on_zoom_reset_window_event","on_zoom_window_event","perform_updates","receive_messages","receiver","rendering_context","rendering_context","repaint_synchronously","replace_native_surface","sender","set_painting_order","set_webview_loaded","shutdown_state","surfaces","swap_current_window","time_profiler_chan","to_owned","to_owned","to_owned","toggle_webrender_debug","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","webrender","webrender_api","webrender_api","webrender_document","webrender_gl","webxr_main_thread","webxr_main_thread","Config","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","deref","deref_mut","downcast","drop","filterable","fmt","from","init","init","into","into_any","into_any_arc","into_any_rc","maybe_boxed","maybe_boxed","new","opts","resource_dir","to_owned","try_from","try_into","type_id","upcast","vzip","Err","Error","EventLoopError","Ok","OsError","Result","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","downcast","drop","filterable","fmt","fmt","from","from","from","init","into","into_any","into_any_arc","into_any_rc","maybe_boxed","maybe_boxed","source","to_smolstr","to_string","try_from","try_into","type_id","upcast","vzip","CMD_OR_ALT","CMD_OR_CONTROL","keyboard_event_from_winit","Click","DefaultPrevented","DispatchEvent","MultiTouch","NoAction","Nothing","Panning","Pinching","Scroll","TouchAction","TouchHandler","TouchPoint","TouchState","Touching","WaitingForScript","Zoom","active_touch_points","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","filterable","filterable","filterable","filterable","fmt","fmt","fmt","from","from","from","from","id","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","maybe_boxed","maybe_boxed","maybe_boxed","maybe_boxed","maybe_boxed","maybe_boxed","maybe_boxed","maybe_boxed","new","new","on_event_processed","on_touch_cancel","on_touch_down","on_touch_move","on_touch_up","point","state","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","Verso","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","downcast","drop","filterable","finished_shutting_down","from","init","into","into_any","into_any_rc","is_animating","maybe_boxed","maybe_boxed","new","run","try_from","try_into","type_id","upcast","vzip","WebView","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","deref","deref_mut","downcast","drop","filterable","fmt","from","init","into","into_any","into_any_arc","into_any_rc","maybe_boxed","maybe_boxed","new","new_panel","rect","to_owned","try_from","try_into","type_id","upcast","vzip","webview_id","Window","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","downcast","drop","filterable","from","handle_servo_message","handle_servo_messages_with_panel","handle_servo_messages_with_webview","handle_winit_window_event","has_webview","id","init","into","into_any","into_any_rc","maybe_boxed","maybe_boxed","new","new_with_compositor","painting_order","remove_webview","request_redraw","resize","scale_factor","set_cursor_icon","size","try_from","try_into","type_id","upcast","vzip"],"q":[[0,"verso"],[12,"verso::compositor"],[188,"verso::config"],[219,"verso::errors"],[254,"verso::keyboard"],[257,"verso::touch"],[389,"verso::verso"],[415,"verso::webview"],[446,"verso::window"],[483,"core::any"],[484,"icu_provider::request"],[485,"icu_provider_adapters::filter"],[486,"core::fmt"],[487,"core::fmt"],[488,"alloc::sync"],[489,"alloc::rc"],[490,"winit::window"],[491,"webrender_api::units"],[492,"servo_geometry"],[493,"webrender_api::units"],[494,"webrender_api::units"],[495,"webrender_api::units"],[496,"webrender_api::units"],[497,"script_traits"],[498,"core::ffi"],[499,"core::result"],[500,"core::any"],[501,"std::path"],[502,"winit::error"],[503,"winit::error"],[504,"smol_str"],[505,"alloc::string"],[506,"winit::event"],[507,"winit::keyboard"],[508,"keyboard_types"],[509,"euclid::point"],[510,"script_traits::script_msg"],[511,"winit::event_loop"],[512,"winit::event_loop"],[513,"compositing_traits::constellation_msg"],[514,"crossbeam_channel::channel"],[515,"arboard"],[516,"winit::event"],[517,"alloc::vec"],[518,"euclid::size"],[519,"embedder_traits"]],"d":["","","Utilities to write tests.","Verso’s compositor component to handle webrender.","Utilities to read options and preferences.","Error and result types.","Utilities to handle keyboard inputs and states.","Utilities to handle touch inputs and states.","Main entry types and functions.","Web view types to handle web browsing contexts.","Verso’s window types to handle Winit’s window.","Re-exporting Winit for the sake of convenience.","Mouse click event","Compositor has shut down.","The Verso compositor contains a GL rendering context with …","Data used to construct a compositor.","Mouse down event","Mouse up event","Mouse event for the compositor.","Compositor is still running.","Set profiler flags to webrender.","Set render target flags to webrender.","Shutdown State of the compositor","Compositor is shutting down.","Set texture cache flags to webrender.","Various debug and profiling flags that WebRender supports.","","","","","","","","","","","","","","","","","","","","","","","","","","","Composite to the given target if any, or the current …","A channel to the constellation.","The channel on which messages can be sent to the …","The current window that Compositor is handling.","Consume compositor itself and deinit webrender.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","The underlying native surface can be lost during servo’s …","Whether the application is currently animating. Typically, …","","","","","","","","","","","Tell compositor to start shutting down.","A channel to the memory profiler thread.","Create a new compositor.","Handle the mouse event in the window.","Handle mouse move event in the window.","Simulate a pinch zoom","Notify compositor the provided webview is resized. The …","Handle the window resize event and return a boolean to …","Handle the window scale factor event and return a boolean …","Handle scroll event.","Handle touch event.","Hit test and forward the wheel event to constellation.","Handle zoom reset event","Handle zoom event in the window","Perform composition and related actions.","Receive and handle compositor messages.","A port on which messages inbound to the compositor can be …","Servo’s rendering context","The surfman instance that webrender targets","Repaints and recomposites synchronously. You must be …","On Android, this function will be called when the app …","A channel to the compositor.","Update the painting order of the compositor.","Set the webview of the compositor to completely loaded, …","Tracks whether we are in the process of shutting down, or …","All surfaces that Compositor currently owns.","Change the current window of the compositor should display.","A channel to the time profiler thread.","","","","Update debug option of the webrender.","","","","","","","","","","","","","","","","","","","","","","","","","","Instance of webrender API","Webrender API","The webrender interface, if enabled.","Webrender document ID","Webrender GL handle","WebXR registry","Some XR devices want to run on the main thread.","Configuration of Verso instance.","","","","","","","","","","","","","Returns the argument unchanged.","Init options and preferences.","","Calls <code>U::from(self)</code>.","","","","","","Create a new configuration for creating Verso instance. It …","Global flag options of Servo.","Path to resources directory.","","","","","","","Contains the error value","Errors returned by Verso.","A general error that may occur while running the Winit …","Contains the success value","The error type for when the OS cannot perform the …","Convenient type alias of Result type for Verso.","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Some shortcuts use Cmd on Mac and Alt on other systems.","Some shortcuts use Cmd on Mac and Control on other systems.","Convert Winit’s KeyEvent to Servo’s KeyboardEvent","Simulate a mouse click.","Script is consuming the current touch sequence; don’t …","Send a JavaScript event to content.","A multi-touch gesture is in progress. Contains the number …","Don’t do anything.","Not tracking any touch point","A single touch point is active and has started panning.","A two-finger pinch zoom gesture is active.","Scroll by the provided offset.","The action to take in response to a touch event","Handler of touch inputs and states.","The point of touch input","The states of the touch input state machine.","A single touch point is active and may perform click or …","A touchstart event was dispatched to the page, but the …","Zoom by a magnification factor and scroll by the provided …","Cerrent active touch points.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","ID of touch point","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Create a touch handler.","Create a new touch point.","Handle event result.","Handle touch cancel input.","Handle touch down input.","Handle touch move input.","Handle touch up input.","The position of this point","State of the touch handler","","","","","","","","","","","","","","","","","","","","","","","","Main entry point of Verso browser.","","","","","","","","","","Return true if Verso has shut down and hence there’s no …","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Return true if one of the Verso windows is animating.","","","Create a Verso instance from Winit’s window and event …","Run an iteration of Verso handling cycle. An iteration …","","","","","","A web view is an area to display web browsing context. It…","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","Create a web view from Winit window.","Create a panel view from Winit window. A panel is a …","The position and size of the webview.","","","","","","","Webview ID","A Verso window is a Winit window containing several web …","","","","","","","","","","Returns the argument unchanged.","Handle servo messages. Return true if it requests a new …","Handle servo messages with main panel. Return true it …","Handle servo messages with corresponding web view ID.","Handle Winit window event and return a boolean to indicate …","Check if the window has such webview.","Get Winit window ID of the window.","","Calls <code>U::from(self)</code>.","","","","","Create a Verso window from Winit window and return the …","Create a Verso window with the rendering context.","Get the painting order of this window.","Remove the webview in this window by provided webview ID. …","Queues a Winit <code>WindowEvent::RedrawRequested</code> event to be …","Resize the rendering context and all web views. Return …","Scale factor of the window. This is also known as HIDPI.","Set cursor icon of the window.","Size of the window that’s used by webrender.","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,3,4,0,0,3,3,0,4,2,2,0,4,2,0,25,6,2,3,4,25,6,2,3,4,25,6,2,3,4,25,6,2,3,4,2,3,4,2,3,4,6,25,6,6,6,25,6,2,3,4,25,6,2,3,4,25,6,2,3,4,25,6,2,3,4,4,25,6,2,3,4,4,25,6,2,3,4,25,6,2,3,4,25,6,2,3,4,25,6,2,3,4,2,3,4,25,6,2,3,4,6,6,25,25,6,6,2,2,3,3,4,4,6,25,6,6,6,6,6,6,6,6,6,6,6,6,6,6,25,25,6,6,6,25,6,6,6,6,6,25,2,3,4,6,25,6,2,3,4,25,6,2,3,4,25,6,2,3,4,25,6,2,3,4,25,6,2,3,4,25,25,6,25,25,25,6,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,75,0,42,75,42,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,0,0,53,52,53,52,53,52,52,52,53,0,0,0,0,52,52,53,54,54,51,52,53,54,51,52,53,54,51,52,53,54,51,52,53,51,52,53,51,52,53,54,51,52,53,54,51,52,53,54,51,52,53,54,51,52,53,52,52,52,52,52,54,51,52,53,51,52,53,54,51,52,53,51,54,51,52,53,54,51,52,53,54,51,52,53,54,51,52,53,54,51,52,53,54,54,51,51,52,52,53,53,54,51,54,54,54,54,54,51,54,51,52,53,54,51,52,53,54,51,52,53,54,51,52,53,54,51,52,53,54,51,52,53,0,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,0,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34],"f":"``````````````````````````{cb{}}000000000{ce{}{}}000000000{dd}{ff}{hh}{{ce}j{}{}}00{lj}```0{nc{}}00000000066666{nj}0000{{hh}A`}{{cAb}{{Aj{e{Ah{Ad}{{Af{A`}}}}}}}{}{}}0000{{hAl}An}{cc{}}0000{{}n}0000<<<<<{{{B`{c}}}{{B`{b}}}{}}0000{{{Bb{c}}}{{Bb{b}}}{}}00{{{Bd{c}}}{{Bd{b}}}{}}0000:`{c{{B`{e}}}{}{}}{ce{}{}}10010101<`{{BfBh{C`{BjBlBn}}CbA`A`}l}{{lf}j}{{lCd}j}{{lBj}j}{{lCfCh}j}{{lBh}A`}{{lBj}A`}{{lCjClCn}j}{{lCnD`Cd}j}{{lDbCd}j}{lj}7{lA`}{{l{Df{BfDd}}}A`}```{{l{Df{BfDd}}}j}{{lDhBh}j}`{{lDd}j}{{lCf}j}``1`{ce{}{}}00{{ld}j}{c{{Dj{e}}}{}{}}000000000{cDl{}}0000{c{{Dn{e}}}{}{}}000044444````````{cb{}}055{E`E`}{{ce}j{}{}}{nc{}}08{nj}{{cAb}{{Aj{e{Ah{Ad}{{Af{A`}}}}}}}{}{}}{{E`Al}An}{cc{}}{E`j}{{}n}>{{{B`{c}}}{{B`{b}}}{}}{{{Bb{c}}}{{Bb{b}}}{}}{{{Bd{c}}}{{Bd{b}}}{}}{ce{}{}}{c{{B`{e}}}{}{}}{EbE`}``2{c{{Dj{e}}}{}{}}0{cDl{}}{c{{Dn{e}}}{}{}}5``````{cb{}}066{nc{}}07{nj}{{cAb}{{Aj{e{Ah{Ad}{{Af{A`}}}}}}}{}{}}{{EdAl}An}0{EfEd}{cc{}}{EhEd}{{}n}>{{{B`{c}}}{{B`{b}}}{}}{{{Bb{c}}}{{Bb{b}}}{}}{{{Bd{c}}}{{Bd{b}}}{}}{ce{}{}}{c{{B`{e}}}{}{}}{Ed{{Dn{Ej}}}}{cEl{}}{cEn{}}{c{{Dj{e}}}{}{}}0{cDl{}}{c{{Dn{e}}}{}{}}7``{{F`Fb}Fd}`````````````````{cb{}}000000099999999{FfFf}{FhFh}{FjFj}{{ce}j{}{}}00{nc{}}0000000>>>>{nj}000{{FhFh}A`}{{ce}A`{}{}}000{{cAb}{{Aj{e{Ah{Ad}{{Af{A`}}}}}}}{}{}}000{{FfAl}An}{{FhAl}An}{{FjAl}An}{cc{}}000`{{}n}000{ce{}{}}000{{{B`{c}}}{{B`{b}}}{}}000{{{Bb{c}}}{{Bb{b}}}{}}000{{{Bd{c}}}{{Bd{b}}}{}}000{c{{B`{e}}}{}{}}4044040{{}Fl}{{D`{Fn{BjBn}}}Ff}{{FlG`}j}{{FlD`{Fn{BjBn}}}j}0{{FlD`{Fn{BjBn}}}Fj}0``999{c{{Dj{e}}}{}{}}0000000{cDl{}}000{c{{Dn{e}}}{}{}}000<<<<`{cb{}}0=={nc{}}0>{nj}{{cAb}{{Aj{e{Ah{Ad}{{Af{A`}}}}}}}{}{}}{GbA`}{cc{}}{{}n}{ce{}{}}{{{B`{c}}}{{B`{b}}}{}}{{{Bd{c}}}{{Bd{b}}}{}}52{c{{B`{e}}}{}{}}{{{Gd{j}}{Gf{j}}E`}Gb}{{Gb{Gh{j}}{Gd{j}}}j}??>=5`<<55{GjGj}{{ce}j{}{}}==7<;{{GjAl}An}:987{{{Bb{c}}}{{Bb{b}}}{}}769{{GlCh}Gj}{ChGj}`;{c{{Dj{e}}}{}{}}0{cDl{}}{c{{Dn{e}}}{}{}}>``{cb{}}0??{nc{}}0{ce{}{}}{nj}{{cAb}{{Aj{e{Ah{Ad}{{Af{A`}}}}}}}{}{}}{cc{}}{{DdGlGn{Hb{H`}}{Dn{Hd}}l}A`}0{{DdGlGn{Hb{H`}}{Dn{Hd}}l}j}{{Dd{Hb{H`}}lHf}A`}{{DdGl}A`}{DdBf}{{}n}9{{{B`{c}}}{{B`{b}}}{}}{{{Bd{c}}}{{Bd{b}}}{}}{c{{B`{e}}}{}{}}<{{{Gd{j}}}{{Hj{DdHh}}}}{{{Gd{j}}l}Dd}{Dd{{Hl{Gj}}}}{{DdGll}{{Hj{{Dn{Gj}}A`}}}}{Ddj}{{Dd{I`{HnBn}}l}A`}{DdIb}{{DdId}j}{DdBh}{c{{Dj{e}}}{}{}}0{cDl{}}{c{{Dn{e}}}{}{}}{ce{}{}}","c":[],"p":[[10,"Any",483],[6,"WebRenderDebugOption",12],[6,"MouseWindowEvent",12],[6,"ShutdownState",12],[1,"unit"],[5,"IOCompositor",12],[1,"usize"],[1,"bool"],[1,"str"],[5,"DataRequest",484],[17,"Output"],[1,"fn"],[5,"RequestFilterDataProvider",485],[5,"Formatter",486],[8,"Result",486],[5,"Box",487],[5,"Arc",488],[5,"Rc",489],[5,"WindowId",490],[8,"DeviceIntSize",491],[1,"f32"],[6,"DeviceIndependentPixel",492],[5,"DevicePixel",491],[5,"Scale",493],[5,"InitialCompositorState",12],[8,"DevicePoint",491],[5,"TopLevelBrowsingContextId",494],[8,"DeviceIntRect",491],[6,"ScrollLocation",495],[8,"DeviceIntPoint",491],[6,"TouchEventType",496],[5,"TouchId",496],[5,"WheelDelta",496],[5,"Window",446],[5,"HashMap",497],[6,"c_void",498],[6,"Result",499],[5,"TypeId",483],[6,"Option",500],[5,"Config",188],[5,"PathBuf",501],[6,"Error",219],[5,"OsError",502],[6,"EventLoopError",502],[10,"Error",503],[5,"SmolStr",504],[5,"String",505],[5,"KeyEvent",506],[5,"ModifiersState",507],[5,"KeyboardEvent",508],[5,"TouchPoint",257],[6,"TouchState",257],[6,"TouchAction",257],[5,"TouchHandler",257],[5,"Point2D",509],[6,"EventResult",510],[5,"Verso",389],[5,"EventLoopWindowTarget",511],[5,"EventLoopProxy",511],[6,"Event",506],[5,"WebView",415],[8,"WebViewId",494],[6,"EmbedderMsg",512],[6,"ConstellationMsg",513],[5,"Sender",514],[5,"Clipboard",515],[6,"WindowEvent",506],[5,"RenderingContext",516],[1,"tuple"],[5,"Vec",517],[1,"i32"],[5,"Size2D",518],[1,"f64"],[6,"Cursor",512],[8,"Result",219]],"b":[[234,"impl-Debug-for-Error"],[235,"impl-Display-for-Error"],[236,"impl-From%3COsError%3E-for-Error"],[238,"impl-From%3CEventLoopError%3E-for-Error"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
